#include<stdio.h>   //header files decaration//
#include<string.h>
#include<stdlib.h>
#define MAX 20	

char str[MAX], stack[MAX];
int top=-1;  //declaring top//

void push(char c) //function definition passing prototype//
{
	stack[++top]=c;
}

char pop()  //pop function//
{
	return stack[top--];
}

int checkifoperand(char ch)
{
	return (ch>='a'&&ch<='z')||(ch>='A'&&ch<='Z');
}

int isoperator(char x)
{
	switch(x)
	{
		case '+':
		case '-':
		case '/':
		case '*':
			return 1;
	}
	return 0;
}

void postfixtoprefix() //conversion function pre to post expression//
{
	int n,i,j=0;  //variable declaration//
	char c[20];  //size o stack// 
	char a,b,op;
	printf("Enter the postfix expression\n"); //user input//
	scanf("%s" , str);
	n=strlen(str);
	printf("Prefix expression is : \t"); //display//
	for(i=0;i<MAX;i++) //condition loop//
	{
		stack[i]='\0';
		
	}
	for(i=n-1; i>=0; i--)
	{
		if(isoperator(str[i]))
		{
			push(str[i]);	
		}
		else
		{
			c[j++]=str[i];
			while((top!=-1)&&(stack[top]=='#'))
			{
				a=pop();
				c[j++]=pop();
			}
			push('#');
		}
	}
	c[j]='\0';
	i=0;
	j=strlen(c)-1;
	char d[20];
	while(c[i]!='\0')
	{
		d[j--]=c[i++];
	}
	printf("%s\n", d);
}

int main()  //main function//
{
	postfixtoprefix();
	return 0;
}
